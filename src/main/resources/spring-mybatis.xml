<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">



    <context:annotation-config/>
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.sunland"/>



    <context:property-placeholder location="classpath*:jdbc.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="validationQueryTimeout" value="1"/>
        <property name="testOnBorrow" value="true"/>
        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="${jdbc.initialSize}"/>-->
        <!--&lt;!&ndash; 连接池最大数量 &ndash;&gt;-->
        <!--<property name="maxActive" value="${jdbc.maxActive}"/>-->
        <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
        <!--<property name="maxIdle" value="${jdbc.maxIdle}"/>-->
        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
        <!--<property name="minIdle" value="${jdbc.minIdle}"/>-->
        <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="${jdbc.maxWait}"/>-->
    </bean>

    <!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis配置文件的位置 -->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath*:/com/sunland/mapping/*.xml"/>
        <property name="typeAliasesPackage" value="com.sunland.pojo"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sunland.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="markerInterface" value="com.sunland.support.mybatis.MybatisMysqlMapper"/>
        <property name="properties">
            <value>
                IDENTITY=MYSQL
                mappers=com.sunland.support.mybatis.MybatisMysqlMapper
                notEmpty=true
            </value>
        </property>
    </bean>

    <aop:config proxy-target-class="true">
        <!-- 定义一个切入点 -->
        <aop:pointcut expression="execution(* com.sunland.service..*.*(..))" id="services"/>
        <!-- 对切入点和事务的通知，进行适配 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
    </aop:config>

</beans>